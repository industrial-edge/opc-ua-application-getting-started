[{"id":"c84ed8d2.a7d768","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"feae0bd8.ab7198","type":"tab","label":"SinusWave","disabled":true,"info":""},{"id":"697662fa.f6378c","type":"tab","label":"OPC-UA","disabled":false,"info":""},{"id":"396f7593.48e97a","type":"tab","label":"BrainCube","disabled":true,"info":""},{"id":"48a39379.4c62fc","type":"tab","label":"Flow 3","disabled":true,"info":""},{"id":"dcaa6f5c.fa80c","type":"tab","label":"Flow 4","disabled":true,"info":""},{"id":"4ca5e3ec.ec051c","type":"tab","label":"Modbus","disabled":true,"info":""},{"id":"70d4fbdb.87b6d4","type":"tab","label":"DataBus","disabled":true,"info":""},{"id":"b1712564.eaefa8","type":"tab","label":"Profinet","disabled":true,"info":""},{"id":"9f0841b0.729a7","type":"tab","label":"IE Cloud Connector 1","disabled":true,"info":""},{"id":"e9784ef1.7c8ea","type":"subflow","name":"setTagValue","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"b4522ba3.749b38"}]}],"out":[{"x":440,"y":180,"wires":[{"id":"b4522ba3.749b38","port":0}]}],"env":[{"name":"tagName","type":"str","value":"","ui":{"icon":"font-awesome/fa-address-book-o","label":{"en-US":"Tag Name"},"type":"input","opts":{"types":["str"]}}},{"name":"connectionTag","type":"str","value":"PLC1"}],"color":"#DDAA99"},{"id":"aaeedf25.8b7d6","type":"subflow","name":"Toogle boolean Tag","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"ca402473.978698"}]}],"out":[{"x":340,"y":80,"wires":[{"id":"ca402473.978698","port":0}]}],"env":[{"name":"tagName","type":"str","value":""}],"color":"#DDAA99"},{"id":"b86e4596.f7ae08","type":"subflow","name":"getTagValue","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"90164cb4.2cb73"}]}],"out":[{"x":360,"y":80,"wires":[{"id":"90164cb4.2cb73","port":0}]}],"env":[{"name":"tagName","type":"str","value":""}],"color":"#DDAA99"},{"id":"ce3ac4d6.87f548","type":"group","z":"48a39379.4c62fc","name":"","style":{"label":true,"color":"#000000","stroke":"#001f60","fill":"#e3f3d3"},"nodes":["3f73f1d9.cd724e","aacf700b.5af32","428f73b6.e5242c","56cda598.10206c","ba439df6.0688b","cad0cb25.f6ba28"],"x":54,"y":299,"w":782,"h":182},{"id":"9dc3c8b5.e0f6d8","type":"group","z":"48a39379.4c62fc","name":"","style":{"fill":"#ffff00","label":true,"stroke":"#000000"},"nodes":["e8853efa.8b667","de41a738.394ff8","7d59ae97.bcfe5","b5cb862d.f1f098","2123d24f.6020ee","4371baa8.6f4be4","199a4e8b.5295c1","b8539e7f.d364","a8444e10.71eb6","7f4179b7.f634a8"],"x":54,"y":19,"w":832,"h":262},{"id":"4033973a.94ce78","type":"group","z":"48a39379.4c62fc","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b928182d.34e728","4e32c879.edea88","67e29501.e3664c"],"x":74,"y":819,"w":632,"h":82},{"id":"921830f3.ec27b","type":"group","z":"48a39379.4c62fc","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bee7866f.f16098","5acc4fee.4cf54","95f42045.9b935","7321606d.d0f7"],"x":64,"y":499,"w":782,"h":142},{"id":"a83c7ded.176f8","type":"group","z":"48a39379.4c62fc","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a90c65ba.9358d8","cb877575.f78288","acf09f5b.4d71b","57e495bc.e41a2c","5e77c95d.6de498"],"x":54,"y":659,"w":762,"h":142},{"id":"62f8a17a.28eca","type":"group","z":"dcaa6f5c.fa80c","name":"","style":{"fill":"#ffff00","label":true,"stroke":"#000000"},"nodes":["98a95ab4.c4c9d8","3c4197a5.73e2c8","9eea1d37.bbbbd","a57a45a4.984f08","5f3a8efc.1caef","a11c4daa.ed887","2b61ab09.e72934","1d7a385d.598fe8"],"x":154,"y":39},{"id":"65990378.357ecc","type":"group","z":"dcaa6f5c.fa80c","name":"","style":{"stroke":"#000000","label":true,"fill":"#ffefbf"},"nodes":["c9a53a2c.5017b8","152241d6.736fee","84afca7.5ec7938","bd400d4e.44db7"],"x":214,"y":319},{"id":"2b9288f1.18d278","type":"group","z":"dcaa6f5c.fa80c","name":"","style":{"stroke":"#000000","fill":"#ffbfbf","label":true},"nodes":["e25ac65c.72c688","cee9f779.7b9f28","887a454b.2ebd58","797483cd.c2e4cc"],"x":174,"y":479},{"id":"bcc83790.7ad2a8","type":"group","z":"396f7593.48e97a","name":"","style":{"stroke":"#000000","fill":"#ffbfbf","label":true},"nodes":["5bd9aa05.c35cc4","3290fc9.6e9a704","be79bfcd.53f33","8c41ae62.96401"],"x":114,"y":299,"w":752,"h":122},{"id":"d4bcafcd.3492","type":"group","z":"396f7593.48e97a","name":"","style":{"fill":"#ffff00","label":true,"stroke":"#000000"},"nodes":["1ae4a685.183219","ff8f0e63.af30f","37a10ba6.5e0284","e4710658.da5df8","6d3b9ab.00e7464","65416b10.6209e4","c06bab48.3224b8","4f17144.b2d5dec"],"x":114,"y":39,"w":772,"h":242},{"id":"3e77aff6.9bb7c","type":"group","z":"396f7593.48e97a","name":"","style":{"stroke":"#000000","label":true,"fill":"#ffefbf"},"nodes":["633b3cb4.18c354","16550c97.1d0dc3","1f0780d5.b40cff","8efac36d.fcc9a"],"x":154,"y":479,"w":672,"h":122},{"id":"e593ae0a.32951","type":"group","z":"b1712564.eaefa8","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7de5ba2.12a1a44","ab557892.86a2b8","ced3141.bf9afe8","d714756.8549688","bd90f178.5b7e5","a146f623.ace9a8","800cf61a.0d7b18","ddf635f4.96db28","ee5070fb.9ac28"],"x":184,"y":59},{"id":"1c0c6fb8.28a82","type":"group","z":"4ca5e3ec.ec051c","name":"","style":{"fill":"#ffffbf","label":true},"nodes":["42f648d5.ea3e28","f7376c13.bf562","9921d00e.83ca4"],"x":154,"y":59},{"id":"fc69a470.75e038","type":"group","z":"4ca5e3ec.ec051c","name":"","style":{"fill":"#e3f3d3","label":true},"nodes":["947adb9b.7b8828","bc1a1d69.51ac7","81b25c84.50b6c","210e9042.b325e"],"x":134,"y":199},{"id":"bf7cd62f.e5ede8","type":"group","z":"4ca5e3ec.ec051c","name":"","style":{"fill":"#bfdbef","label":true},"nodes":["7c938993.295b88","1870f328.9035dd","a504978.d384268","2457c9e8.ec4c46","a129fe3.0aa24","182f0d6d.eed2a3"],"x":94,"y":339},{"id":"a2fd4f2e.5debd","type":"group","z":"b1712564.eaefa8","name":"","style":{"fill":"#bfdbef","label":true},"nodes":["dc78e63a.690ae8","a1eba7bf.3a7808","4bbe2f3.4c7f3d","e98bbe99.cdc73","27d69b96.a58c14"],"x":134,"y":439},{"id":"d6fe9150.27bee","type":"group","z":"697662fa.f6378c","name":"","style":{"fill":"#ffff00","label":true,"stroke":"#000000"},"nodes":["3fe9dbdb.0dbcd4","95548cf8.f2114","b2306431.689c68","62eab68b.b9b0f8"],"x":134,"y":19,"w":852,"h":142},{"id":"e60e8c14.57c3d","type":"group","z":"697662fa.f6378c","name":"","style":{"fill":"#dbcbe7","label":true,"fill-opacity":"0.23"},"nodes":["7b6db4f9.69247c","e3744832.f1e3d8","a21804fd.c39648","b5b6c741.a0d3b8","52f31d0c.92b8c4","cda381df.c595a","546d9b79.5e2594","496a05a0.32a08c","ea095553.9c90e8"],"x":154,"y":759,"w":792,"h":302},{"id":"315930f9.f44c9","type":"group","z":"697662fa.f6378c","name":"","style":{"fill":"#bfdbef","label":true},"nodes":["88727709.7991b8","8a12832e.7b065","2d07e65f.a11eea","4c987d7.a281784"],"x":134,"y":179,"w":852,"h":122},{"id":"6751a745.1161a8","type":"group","z":"697662fa.f6378c","name":"","style":{"stroke":"#a4a4a4","label":true,"fill":"#ffefbf"},"nodes":["2775c81a.da35e8","4fc4fc20.9ec004","88618ed4.bea63","f43f348e.8c6598","797ca005.442b2","5de76388.e0ec6c","4085c35c.51955c"],"x":114,"y":519,"w":912,"h":182},{"id":"4835363e.32b548","type":"group","z":"697662fa.f6378c","name":"","style":{"fill":"#e3f3d3","label":true},"nodes":["8a1a2571.71dd98","55f8dfec.1c44b","fd523445.63f038","756577bc.2a2b78","a9bf7e43.6733f"],"x":134,"y":319,"w":852,"h":182},{"id":"a59a65bc.861138","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"IE Flow Creator Dashboard","hideToolbar":"false","allowSwipe":"true","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"c66e4dd.83145b","type":"ui_tab","name":"Test","icon":"dashboard","disabled":false,"hidden":false},{"id":"2d4661ab.63fa7e","type":"ui_group","name":"Default","tab":"c66e4dd.83145b","order":1,"disp":true,"width":"6","collapse":false},{"id":"7693872.f419678","type":"ui_group","name":"Sinus","tab":"17d61a1e.a98596","order":2,"disp":true,"width":"9","collapse":false},{"id":"17d61a1e.a98596","type":"ui_tab","name":"Home","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"42dfafe3.c64e","type":"modbus-client","name":"VM_TIA","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"172.16.16.21","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectOnTimeout":true,"reconnectTimeout":"2000","parallelUnitIdsAllowed":true},{"id":"310e5351.87c53c","type":"mqtt-broker","name":"","broker":"ie-databus","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"cb24c6f3.e214a8","type":"mqtt-broker","name":"","broker":"ie-databus","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"2d42186c.3eff88","type":"mqtt-broker","name":"ie-databus","broker":"ie-databus","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a042920.ef4aa7","type":"inject","z":"c84ed8d2.a7d768","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"vlad/test/status","payload":"","payloadType":"date","x":230,"y":180,"wires":[["4c5e541c.092f9c","8b10ac24.57484"]]},{"id":"4c5e541c.092f9c","type":"function","z":"c84ed8d2.a7d768","name":"","func":"var date = new Date(msg.payload);\n\nmsg.payload = date.toString();\n\nnode.error(\"test error msg\");\nnode.warn(\"test warrning msg\");\nnode.log(\"test log msg\");\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":160,"wires":[["57e829ba.269458"]]},{"id":"57e829ba.269458","type":"debug","z":"c84ed8d2.a7d768","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":810,"y":160,"wires":[]},{"id":"8b10ac24.57484","type":"debug","z":"c84ed8d2.a7d768","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":690,"y":360,"wires":[]},{"id":"3f73f1d9.cd724e","type":"debug","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":340,"wires":[]},{"id":"aacf700b.5af32","type":"mqtt in","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/PLC1/default","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":230,"y":340,"wires":[["428f73b6.e5242c"]]},{"id":"37020d8a.de3c62","type":"mqtt in","z":"feae0bd8.ab7198","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/opcuaSinus/default","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":210,"y":120,"wires":[["6d16e803.892018"]]},{"id":"6d16e803.892018","type":"function","z":"feae0bd8.ab7198","name":"assign ID- Value ","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\");    \nlet timestampMapObject = global.get(\"timestampMapObject\");\nlet variableName=\"sinusVal\";\nlet new_message=0;\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \nlet m= msg.payload;\nlet timestamp;\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        timestamp = value.ts;\n        //only send message when sinus value is sent\n        if(value.id == nameIDMap.get(variableName))\n        {\n            //get the id of the sinusVariable and get with this id the current value\n            new_message=1;\n            msg.payload=idValueMap.get(nameIDMap.get(variableName));\n        }\n    });\n    \n    timestampMapObject =\n    {\n        \"ts\": timestamp,\n        \"map\": idValueMap\n    }\n    \n}\nif((new_message===0)){msg = null;}\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":120,"wires":[["6fac475.ed932b8","473b7b93.d78c94","7023640.900da9c"]]},{"id":"c939e165.5f80a","type":"debug","z":"feae0bd8.ab7198","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":40,"wires":[]},{"id":"842285f4.2dce58","type":"mqtt in","z":"feae0bd8.ab7198","name":"","topic":"ie/m/#","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":90,"y":40,"wires":[["fb1b016c.97f41"]]},{"id":"d3a6393d.a74fc8","type":"function","z":"feae0bd8.ab7198","name":"write the sinus parameters","func":"/*################################# \n   get the data from the form\n#################################*/ \nlet freq = msg.payload.Frequency;\nlet amp = msg.payload.Amplitude;\nlet off = msg.payload.Offset;\n\n/*################################# \n    get global maps\n#################################*/ \nlet nameIDMap = global.get(\"NameIDMap\"); \n\n/*################################# \n    write MQTT-message\n#################################*/ \nmsg.payload = \n{\n    \"seq\": 1,\n    \"vals\": [\n        {\n        \"id\": nameIDMap.get(\"Frequency\"),       //get the id to the variable name\n        \"val\": Number(freq)\n        },\n        {\n        \"id\": nameIDMap.get(\"Amplitude\"),       //get the id to the variable name\n        \"val\": Number(amp)\n        },\n        {\n        \"id\": nameIDMap.get(\"Offset\"),          //get the id to the variable name\n        \"val\": Number(off)\n        }\n    ]\n}\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":720,"y":300,"wires":[["29e68c2e.b50924","9ba922be.24797"]]},{"id":"ecafdd76.69e4b","type":"ui_form","z":"feae0bd8.ab7198","name":"","label":"","group":"7693872.f419678","order":1,"width":0,"height":0,"options":[{"label":"Frequency","value":"Frequency","type":"text","required":true,"rows":null},{"label":"Amplitude","value":"Amplitude","type":"text","required":true,"rows":null},{"label":"Offset","value":"Offset","type":"text","required":true,"rows":null}],"formValue":{"Frequency":"","Amplitude":"","Offset":""},"payload":"","submit":"submit","cancel":"cancel","topic":"","x":470,"y":220,"wires":[["d3a6393d.a74fc8","24f68874.a583d8"]]},{"id":"29e68c2e.b50924","type":"debug","z":"feae0bd8.ab7198","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":300,"wires":[]},{"id":"9ba922be.24797","type":"mqtt out","z":"feae0bd8.ab7198","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/w/opcuaSinus","qos":"2","retain":"","broker":"310e5351.87c53c","x":1170,"y":360,"wires":[]},{"id":"2e98ab94.d9e884","type":"ui_gauge","z":"feae0bd8.ab7198","name":"","group":"7693872.f419678","order":2,"width":0,"height":0,"gtype":"gage","title":"gauge","label":"units","format":"{{value}}","min":"-1","max":"1","colors":["#00ff00","#f5f500","#04ff00"],"seg1":"","seg2":"","x":1070,"y":220,"wires":[]},{"id":"24f68874.a583d8","type":"function","z":"feae0bd8.ab7198","name":"adjusting the min/max values to amplitude","func":"var max = (Number(msg.payload.Amplitude) + Number(msg.payload.Offset));\nvar min = max * (-1);\n\nmsg = {ui_control:{min:min,max:max}}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":760,"y":220,"wires":[["2e98ab94.d9e884"]]},{"id":"6fac475.ed932b8","type":"debug","z":"feae0bd8.ab7198","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1090,"y":120,"wires":[]},{"id":"473b7b93.d78c94","type":"ui_chart","z":"feae0bd8.ab7198","name":"","group":"7693872.f419678","order":3,"width":0,"height":0,"label":"chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"6","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#00d6e6","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"x":1070,"y":160,"wires":[[]]},{"id":"9cb49e99.1b056","type":"function","z":"feae0bd8.ab7198","name":"update form","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      //global defined in \"Name - ID zuordenen\"\nlet idValueMap = global.get(\"IDValueMap\");    //global defined in \"Name - ID zuordenen\", changed here with every message\nlet oldValues = global.get(\"oldValues\");      //global defined in \"Name - ID zuordenen\", changed here when parameters changed\n\n//Variables for writing changes of the parameters to the form\nlet iterator = idValueMap.keys()\nlet id;\nlet changed = false;\nlet variableName=\"sinusVal\";\n\n/*################################# \n    Check if a parameter changed\n#################################*/\nidValueMap.forEach( () => {\n    id = iterator.next().value;\n    if(id != nameIDMap.get(variableName))\n    {\n        if(idValueMap.get(id) != oldValues.get(id))\n        {\n            oldValues.set(id, idValueMap.get(id));\n            changed = true;\n        }\n    }\n})\n\n/*################################# \n   if changed- update parameters in the form\n#################################*/\nif(changed)\n{\n    changed = false;\n    msg.payload = \n    {\n        \"Frequency\": idValueMap.get(nameIDMap.get(\"Frequency\")).toFixed(2),\n        \"Amplitude\": idValueMap.get(nameIDMap.get(\"Amplitude\")).toFixed(1),\n        \"Offset\": idValueMap.get(nameIDMap.get(\"Offset\")).toFixed(1)\n    }\n}else \n{\n    msg = null;\n}\n\n/*################################# \n    update global maps\n#################################*/ \nglobal.set(\"oldValues\", oldValues);\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":220,"wires":[["ecafdd76.69e4b"]]},{"id":"42a23545.db05ec","type":"complete","z":"feae0bd8.ab7198","name":"","scope":["6d16e803.892018"],"uncaught":false,"x":110,"y":220,"wires":[["9cb49e99.1b056","3f59a6ad.42c2ea"]]},{"id":"76abe2ac.809b8c","type":"function","z":"feae0bd8.ab7198","name":"Init Program","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");\nlet idValueMap = new Map();         \nlet oldValues = new Map();          \nlet timestampMapObject = {};\n/*################################# \n    set default values for the form \n#################################*/\nidValueMap.set(nameIDMap.get(\"Frequency\"), Number(0.1));\nidValueMap.set(nameIDMap.get(\"Amplitude\"), Number(1.0));\nidValueMap.set(nameIDMap.get(\"Offset\"), Number(0.0));\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"oldValues\", oldValues);\nglobal.set(\"timestampMapObject\",timestampMapObject);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":670,"y":40,"wires":[["c939e165.5f80a"]]},{"id":"fb1b016c.97f41","type":"function","z":"feae0bd8.ab7198","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\nlet connectionName = \"opcuaSinus\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name == connectionName)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":40,"wires":[["76abe2ac.809b8c"]]},{"id":"3f59a6ad.42c2ea","type":"function","z":"feae0bd8.ab7198","name":"getTimestamp and value","func":"let timestampMapObject = global.get(\"timestampMapObject\");\nlet nameIDMap = global.get(\"NameIDMap\");  \n\n//let object = timestampMapObject.\nlet newMsg = { payload: msg.payload.length };\n\nmsg.payload = timestampMapObject.ts;\n\nnewMsg.payload = timestampMapObject.map.get(nameIDMap.get(\"SinusVal\"))\n\nreturn [msg,newMsg];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":350,"y":280,"wires":[[],[]]},{"id":"7023640.900da9c","type":"function","z":"feae0bd8.ab7198","name":"limit_real","func":"myValue = msg.payload;\nmyFixedPrecisionValue = myValue.toFixed(2); // \"70.3\" => keep in mind that this is a string\nmyFixedPrecisionNumber = Number(myFixedPrecisionValue); // 70.3\nmsg.payload = myFixedPrecisionNumber;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":860,"y":180,"wires":[["2e98ab94.d9e884"]]},{"id":"e8853efa.8b667","type":"mqtt in","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/status","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":210,"y":80,"wires":[["2123d24f.6020ee","4371baa8.6f4be4"]]},{"id":"de41a738.394ff8","type":"mqtt in","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","topic":"ie/m/j/simatic/v1/s7c1/dp","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":190,"y":180,"wires":[["199a4e8b.5295c1"]]},{"id":"7d59ae97.bcfe5","type":"debug","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":60,"wires":[]},{"id":"b5cb862d.f1f098","type":"debug","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":710,"y":180,"wires":[]},{"id":"2123d24f.6020ee","type":"change","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.msg","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":520,"y":60,"wires":[["7d59ae97.bcfe5"]]},{"id":"4371baa8.6f4be4","type":"debug","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":710,"y":100,"wires":[]},{"id":"199a4e8b.5295c1","type":"function","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\nlet idValueMap = new Map();          //global only changed here\nlet connectionName = \"PLC1\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name == connectionName)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\nglobal.set(\"IDValueMap\", idValueMap);\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":500,"y":180,"wires":[["b5cb862d.f1f098"]]},{"id":"428f73b6.e5242c","type":"function","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"assign ID- Value ","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\");    \nlet timestampMapObject = global.get(\"timestampMapObject\");\n\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \nlet m= msg.payload;\nlet timestamp;\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        timestamp = value.ts;\n    });\n    \n    timestampMapObject =\n    {\n        \"ts\": timestamp,\n        \"map\": idValueMap\n    }\n    \n}\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":520,"y":340,"wires":[["3f73f1d9.cd724e"]]},{"id":"a90c65ba.9358d8","type":"complete","z":"48a39379.4c62fc","g":"a83c7ded.176f8","name":"","scope":["428f73b6.e5242c"],"uncaught":false,"x":150,"y":700,"wires":[["cb877575.f78288"]]},{"id":"cb877575.f78288","type":"function","z":"48a39379.4c62fc","g":"a83c7ded.176f8","name":"get Tag Value","func":"\n\n\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\"); \n\nlet Start = idValueMap.get(nameIDMap.get(\"Start\"));\nif (Start){\n    msg.payload = true;\n}\n    else{\n    msg.payload = false;\n}\n\n//msg.payload = Start;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":700,"wires":[["acf09f5b.4d71b","57e495bc.e41a2c"]]},{"id":"acf09f5b.4d71b","type":"debug","z":"48a39379.4c62fc","g":"a83c7ded.176f8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":690,"y":700,"wires":[]},{"id":"57e495bc.e41a2c","type":"ui_switch","z":"48a39379.4c62fc","g":"a83c7ded.176f8","name":"","label":"switch","tooltip":"","group":"2d4661ab.63fa7e","order":3,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","x":740,"y":760,"wires":[[]]},{"id":"5e77c95d.6de498","type":"inject","z":"48a39379.4c62fc","g":"a83c7ded.176f8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"true","payloadType":"bool","x":390,"y":760,"wires":[["57e495bc.e41a2c"]]},{"id":"56cda598.10206c","type":"inject","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"Start_true","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":68,\"vals\":[{\"id\":\"105\",\"qc\":3,\"ts\":\"2021-10-11T06:08:11.635Z\",\"val\":1}]}","payloadType":"json","x":180,"y":400,"wires":[["428f73b6.e5242c"]]},{"id":"ba439df6.0688b","type":"inject","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"Start_false","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":65,\"vals\":[{\"id\":\"105\",\"qc\":3,\"ts\":\"2021-10-08T14:23:34.034Z\",\"val\":0}]}","payloadType":"json","x":180,"y":440,"wires":[["428f73b6.e5242c"]]},{"id":"b8539e7f.d364","type":"inject","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"connect","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"id\":0,\"msg\":\"Connected\"}","payloadType":"json","x":230,"y":120,"wires":[["2123d24f.6020ee","4371baa8.6f4be4"]]},{"id":"a8444e10.71eb6","type":"inject","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"metadata","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":1,\"connections\":[{\"name\":\"PLC1\",\"type\":\"OPCUA\",\"dataPoints\":[{\"name\":\"default\",\"topic\":\"ie/d/j/simatic/v1/s7c1/dp/r/PLC1/default\",\"publishType\":\"bulk\",\"dataPointDefinitions\":[{\"name\":\"Stop\",\"id\":\"104\",\"dataType\":\"Bool\"},{\"name\":\"Start\",\"id\":\"105\",\"dataType\":\"Bool\"}]}]}]}","payloadType":"json","x":180,"y":240,"wires":[["199a4e8b.5295c1"]]},{"id":"b928182d.34e728","type":"complete","z":"48a39379.4c62fc","g":"4033973a.94ce78","name":"","scope":["b5cb862d.f1f098"],"uncaught":false,"x":170,"y":860,"wires":[["4e32c879.edea88"]]},{"id":"4e32c879.edea88","type":"function","z":"48a39379.4c62fc","g":"4033973a.94ce78","name":"test Global","func":"\nlet nameIDMap  = global.get(\"NameIDMap\");\n\nmsg.payload = nameIDMap.get(\"Start\").toString();\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":860,"wires":[["67e29501.e3664c"]]},{"id":"67e29501.e3664c","type":"debug","z":"48a39379.4c62fc","g":"4033973a.94ce78","name":"test_global","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":590,"y":860,"wires":[]},{"id":"bee7866f.f16098","type":"mqtt out","z":"48a39379.4c62fc","g":"921830f3.ec27b","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/w/PLC1","qos":"","retain":"","broker":"310e5351.87c53c","x":690,"y":540,"wires":[]},{"id":"5acc4fee.4cf54","type":"inject","z":"48a39379.4c62fc","g":"921830f3.ec27b","name":"Start_false","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":65,\"vals\":[{\"id\":\"105\",\"qc\":3,\"ts\":\"2021-10-08T14:23:34.034Z\",\"val\":0}]}","payloadType":"str","x":170,"y":540,"wires":[["95f42045.9b935"]]},{"id":"95f42045.9b935","type":"function","z":"48a39379.4c62fc","g":"921830f3.ec27b","name":"set Tag Value","func":"/*################################# \n   get the data \n#################################*/ \nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\"); \n\nlet tagName = \"Start\";\nlet tagID = nameIDMap.get(tagName);\nlet tagValue = idValueMap.get(tagID)\n\n/*################################# \n    write MQTT-message\n#################################*/ \nmsg.payload = \n{\n    \"seq\": 1,\n    \"vals\": [\n        {\n        \"id\": tagID,       //get the id to the variable name\n        \"val\": tagValue\n        }\n    ]\n}\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":540,"wires":[["bee7866f.f16098","7321606d.d0f7"]]},{"id":"7321606d.d0f7","type":"debug","z":"48a39379.4c62fc","g":"921830f3.ec27b","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":630,"y":600,"wires":[]},{"id":"cad0cb25.f6ba28","type":"comment","z":"48a39379.4c62fc","g":"ce3ac4d6.87f548","name":"Get tag/tags Value and insert in global idValueMap","info":"Get tag/tags Value and insert in global idValueMap","x":620,"y":420,"wires":[]},{"id":"7f4179b7.f634a8","type":"comment","z":"48a39379.4c62fc","g":"9dc3c8b5.e0f6d8","name":"Get connection and all tag IDs and put in global nameIDMap","info":"","x":640,"y":240,"wires":[]},{"id":"9eea1d37.bbbbd","type":"mqtt in","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"","topic":"ie/m/j/simatic/v1/s7c1/dp","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":310,"y":140,"wires":[["a57a45a4.984f08"]]},{"id":"98a95ab4.c4c9d8","type":"debug","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":830,"y":140,"wires":[]},{"id":"3c4197a5.73e2c8","type":"comment","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"Get connection and all tag IDs and put in global nameIDMap","info":"","x":540,"y":80,"wires":[]},{"id":"2f7b8c3a.ee7974","type":"mqtt out","z":"e9784ef1.7c8ea","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/w/Tank","qos":"","retain":"","broker":"310e5351.87c53c","x":490,"y":80,"wires":[]},{"id":"b4522ba3.749b38","type":"function","z":"e9784ef1.7c8ea","name":"set Tag Value","func":"/*################################# \n   get the data \n#################################*/ \nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\"); \n\nlet tagName = env.get(\"tagName\");//\"Start\";\nlet tagID = nameIDMap.get(tagName);\nlet tagValue = idValueMap.get(tagID)\n\n/*################################# \n    write MQTT-message\n#################################*/ \nmsg.payload = \n{\n    \"seq\": 1,\n    \"vals\": [\n        {\n        \"id\": tagID,       //get the id to the variable name\n        \"val\": tagValue\n        }\n    ]\n}\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":220,"y":80,"wires":[["2f7b8c3a.ee7974"]]},{"id":"2b61ab09.e72934","type":"debug","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":240,"wires":[]},{"id":"5f3a8efc.1caef","type":"mqtt in","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/PLC1/default","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":330,"y":240,"wires":[["a11c4daa.ed887"]]},{"id":"a11c4daa.ed887","type":"function","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"assign ID- Value ","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\");    \nlet timestampMapObject = global.get(\"timestampMapObject\");\n\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \nlet m= msg.payload;\nlet timestamp;\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        timestamp = value.ts;\n    });\n    \n    timestampMapObject =\n    {\n        \"ts\": timestamp,\n        \"map\": idValueMap\n    }\n    \n}\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":240,"wires":[["2b61ab09.e72934"]]},{"id":"1d7a385d.598fe8","type":"comment","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"Get tag/tags Value and insert in global idValueMap","info":"Get tag/tags Value and insert in global idValueMap","x":530,"y":200,"wires":[]},{"id":"a57a45a4.984f08","type":"function","z":"dcaa6f5c.fa80c","g":"62f8a17a.28eca","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\nlet idValueMap = new Map();          //global only changed here\nlet oldValues = new Map();   \nlet connectionName = \"PLC1\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name == connectionName)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"oldValues\", oldValues);\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":140,"wires":[["98a95ab4.c4c9d8"]]},{"id":"c9a53a2c.5017b8","type":"inject","z":"dcaa6f5c.fa80c","g":"65990378.357ecc","name":"toogle Bolean","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"test","payloadType":"msg","x":330,"y":400,"wires":[["84afca7.5ec7938"]]},{"id":"ca402473.978698","type":"function","z":"aaeedf25.8b7d6","name":"","func":"let nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\"); \nlet tagName = env.get(\"tagName\");\nlet tagID = nameIDMap.get(tagName);\nlet tagValue = idValueMap.get(tagID);\n\nif(tagValue == 0){\n    tagValue = 1;\n}\nelse tagValue = 0;\n\n\nidValueMap.set(tagID,tagValue);\nmsg.payload = tagValue;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":200,"y":80,"wires":[[]]},{"id":"152241d6.736fee","type":"subflow:e9784ef1.7c8ea","z":"dcaa6f5c.fa80c","g":"65990378.357ecc","name":"","env":[{"name":"tagName","value":"Start","type":"str"}],"x":790,"y":400,"wires":[[]]},{"id":"84afca7.5ec7938","type":"subflow:aaeedf25.8b7d6","z":"dcaa6f5c.fa80c","g":"65990378.357ecc","name":"","env":[{"name":"tagName","value":"Start","type":"str"}],"x":530,"y":400,"wires":[["152241d6.736fee"]]},{"id":"bd400d4e.44db7","type":"comment","z":"dcaa6f5c.fa80c","g":"65990378.357ecc","name":"Set Tag OPCUA","info":"","x":540,"y":360,"wires":[]},{"id":"e25ac65c.72c688","type":"complete","z":"dcaa6f5c.fa80c","g":"2b9288f1.18d278","name":"","scope":["a11c4daa.ed887"],"uncaught":false,"x":270,"y":560,"wires":[["797483cd.c2e4cc"]]},{"id":"90164cb4.2cb73","type":"function","z":"b86e4596.f7ae08","name":"get Tag Value","func":"\n\n\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\"); \nlet oldValues = global.get(\"oldValues\");      //global defined in \"Name - ID zuordenen\", changed here when parameters changed\n\nlet tagName = env.get(\"tagName\");\nlet tagID = nameIDMap.get(tagName);\nlet tagValue = idValueMap.get(tagID);\n\nif(tagValue != oldValues.get(tagID)){\n    msg.payload  = tagValue;\n    oldValues.set(tagID,tagValue);\n}\nelse msg = null;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":200,"y":80,"wires":[[]]},{"id":"cee9f779.7b9f28","type":"debug","z":"dcaa6f5c.fa80c","g":"2b9288f1.18d278","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":810,"y":560,"wires":[]},{"id":"887a454b.2ebd58","type":"comment","z":"dcaa6f5c.fa80c","g":"2b9288f1.18d278","name":"Get tag Value from OPCUA","info":"","x":550,"y":520,"wires":[]},{"id":"797483cd.c2e4cc","type":"subflow:b86e4596.f7ae08","z":"dcaa6f5c.fa80c","g":"2b9288f1.18d278","name":"","env":[{"name":"tagName","value":"Man","type":"str"}],"x":550,"y":560,"wires":[["cee9f779.7b9f28"]]},{"id":"5bd9aa05.c35cc4","type":"complete","z":"396f7593.48e97a","g":"bcc83790.7ad2a8","name":"","scope":["65416b10.6209e4"],"uncaught":false,"x":210,"y":380,"wires":[["8c41ae62.96401"]]},{"id":"3290fc9.6e9a704","type":"debug","z":"396f7593.48e97a","g":"bcc83790.7ad2a8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":750,"y":380,"wires":[]},{"id":"be79bfcd.53f33","type":"comment","z":"396f7593.48e97a","g":"bcc83790.7ad2a8","name":"Get tag Value from ","info":"","x":470,"y":340,"wires":[]},{"id":"8c41ae62.96401","type":"subflow:b86e4596.f7ae08","z":"396f7593.48e97a","g":"bcc83790.7ad2a8","name":"","env":[{"name":"tagName","value":"ProducedBottles","type":"str"}],"x":490,"y":380,"wires":[["3290fc9.6e9a704"]]},{"id":"1ae4a685.183219","type":"debug","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":770,"y":140,"wires":[]},{"id":"ff8f0e63.af30f","type":"comment","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"Get connection and all tag IDs and put in global nameIDMap","info":"","x":500,"y":80,"wires":[]},{"id":"37a10ba6.5e0284","type":"mqtt in","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"","topic":"ie/m/j/simatic/v1/s7c1/dp","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":270,"y":140,"wires":[["e4710658.da5df8"]]},{"id":"e4710658.da5df8","type":"function","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\nlet idValueMap = new Map();          //global only changed here\nlet oldValues = new Map();   \nlet connectionName = \"Tank\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name == connectionName)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"oldValues\", oldValues);\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":140,"wires":[["1ae4a685.183219"]]},{"id":"6d3b9ab.00e7464","type":"mqtt in","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/Tank/default","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":290,"y":240,"wires":[["65416b10.6209e4"]]},{"id":"65416b10.6209e4","type":"function","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"assign ID- Value ","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\");    \nlet timestampMapObject = global.get(\"timestampMapObject\");\n\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \nlet m= msg.payload;\nlet timestamp;\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        timestamp = value.ts;\n    });\n    \n    timestampMapObject =\n    {\n        \"ts\": timestamp,\n        \"map\": idValueMap\n    }\n    \n}\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"timestampMapObject\", timestampMapObject);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":240,"wires":[["c06bab48.3224b8"]]},{"id":"c06bab48.3224b8","type":"debug","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":240,"wires":[]},{"id":"4f17144.b2d5dec","type":"comment","z":"396f7593.48e97a","g":"d4bcafcd.3492","name":"Get tag/tags Value and insert in global idValueMap","info":"Get tag/tags Value and insert in global idValueMap","x":490,"y":200,"wires":[]},{"id":"633b3cb4.18c354","type":"inject","z":"396f7593.48e97a","g":"3e77aff6.9bb7c","name":"toogle Bolean","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"test","payloadType":"msg","x":270,"y":560,"wires":[["1f0780d5.b40cff"]]},{"id":"16550c97.1d0dc3","type":"subflow:e9784ef1.7c8ea","z":"396f7593.48e97a","g":"3e77aff6.9bb7c","name":"","env":[{"name":"tagName","value":"Start","type":"str"}],"x":730,"y":560,"wires":[[]]},{"id":"1f0780d5.b40cff","type":"subflow:aaeedf25.8b7d6","z":"396f7593.48e97a","g":"3e77aff6.9bb7c","name":"","env":[{"name":"tagName","value":"Start","type":"str"}],"x":470,"y":560,"wires":[["16550c97.1d0dc3"]]},{"id":"8efac36d.fcc9a","type":"comment","z":"396f7593.48e97a","g":"3e77aff6.9bb7c","name":"Set Tag OPCUA","info":"","x":480,"y":520,"wires":[]},{"id":"fb6110f2.9251","type":"mqtt in","z":"70d4fbdb.87b6d4","name":"","topic":"ie/#","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":130,"y":120,"wires":[["7b5c3b97.abfe94","23b1cbc1.34c764"]]},{"id":"151888ee.0ca6b7","type":"inject","z":"70d4fbdb.87b6d4","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":955256,\"vals\":[{\"id\":\"112\",\"qc\":3,\"ts\":\"2021-11-15T11:03:35.942Z\",\"val\":214.3001251220703},{\"id\":\"104\",\"qc\":3,\"ts\":\"2021-11-15T11:03:35.942Z\",\"val\":71.21734619140625}]}","payloadType":"json","x":150,"y":240,"wires":[["bd16772b.08b118"]]},{"id":"bd16772b.08b118","type":"split","z":"70d4fbdb.87b6d4","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":290,"y":240,"wires":[["15041808.314658"]]},{"id":"6ef5de3c.d7824","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":240,"wires":[]},{"id":"15041808.314658","type":"split","z":"70d4fbdb.87b6d4","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":410,"y":240,"wires":[["1dc0106c.16276","a9d632b.6910ad"]]},{"id":"1dc0106c.16276","type":"switch","z":"70d4fbdb.87b6d4","name":"","property":"payload.id","propertyType":"msg","rules":[{"t":"eq","v":"103","vt":"str"},{"t":"eq","v":"101","vt":"str"},{"t":"eq","v":"104","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":550,"y":240,"wires":[["5267d202.8b208c","4cae731.ce4378c"],["2c2e96fb.7f923a"],["983b8208.8b254"]]},{"id":"e5792178.1e273","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":320,"wires":[]},{"id":"a9d632b.6910ad","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":180,"wires":[]},{"id":"4cae731.ce4378c","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":160,"wires":[]},{"id":"5267d202.8b208c","type":"change","z":"70d4fbdb.87b6d4","name":"Tank Level","rules":[{"t":"set","p":"payload","pt":"msg","to":"msg.payload.val","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":240,"wires":[["6ef5de3c.d7824"]]},{"id":"2c2e96fb.7f923a","type":"change","z":"70d4fbdb.87b6d4","name":"ProducedBottles","rules":[{"t":"set","p":"payload","pt":"msg","to":"msg.payload.val","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":720,"y":320,"wires":[["e5792178.1e273"]]},{"id":"23b1cbc1.34c764","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":330,"y":60,"wires":[]},{"id":"7b5c3b97.abfe94","type":"json","z":"70d4fbdb.87b6d4","name":"","property":"payload","action":"obj","pretty":false,"x":260,"y":120,"wires":[["bd16772b.08b118"]]},{"id":"983b8208.8b254","type":"change","z":"70d4fbdb.87b6d4","name":"TankTemperature","rules":[{"t":"set","p":"payload","pt":"msg","to":"msg.payload.val","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":400,"wires":[["fb9cf70b.8d20e8"]]},{"id":"fb9cf70b.8d20e8","type":"debug","z":"70d4fbdb.87b6d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":400,"wires":[]},{"id":"947adb9b.7b8828","type":"mqtt in","z":"4ca5e3ec.ec051c","g":"fc69a470.75e038","name":"","topic":"ie/d/j/simatic/v1/mbtcp1/dp/r/ModbusTCP/default","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":340,"y":280,"wires":[["bc1a1d69.51ac7"]]},{"id":"bc1a1d69.51ac7","type":"debug","z":"4ca5e3ec.ec051c","g":"fc69a470.75e038","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":650,"y":280,"wires":[]},{"id":"42f648d5.ea3e28","type":"mqtt in","z":"4ca5e3ec.ec051c","g":"1c0c6fb8.28a82","name":"","topic":"ie/m/j/simatic/v1/mbtcp1/#","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":290,"y":140,"wires":[["f7376c13.bf562"]]},{"id":"f7376c13.bf562","type":"debug","z":"4ca5e3ec.ec051c","g":"1c0c6fb8.28a82","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":560,"y":140,"wires":[]},{"id":"7c938993.295b88","type":"inject","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"inject 55","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":3,\"vals\":[{\"id\":\"102\",\"qc\":3,\"qx\":4288,\"ts\":\"2021-12-14T07:55:22.7137050Z\",\"val\":55}]}","payloadType":"json","x":200,"y":420,"wires":[["1870f328.9035dd","a504978.d384268"]]},{"id":"1870f328.9035dd","type":"debug","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":700,"y":420,"wires":[]},{"id":"7de5ba2.12a1a44","type":"mqtt in","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","topic":"ie/m/j/simatic/v1/pnhs1/dp/r","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":370,"y":100,"wires":[["ab557892.86a2b8"]]},{"id":"ab557892.86a2b8","type":"debug","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":100,"wires":[]},{"id":"ced3141.bf9afe8","type":"mqtt in","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","topic":"ie/d/b/simatic/v1/pnhs1/#","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":320,"y":260,"wires":[["d714756.8549688"]]},{"id":"d714756.8549688","type":"debug","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":590,"y":260,"wires":[]},{"id":"bd90f178.5b7e5","type":"mqtt in","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","topic":"ie/m/#","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":370,"y":200,"wires":[["a146f623.ace9a8"]]},{"id":"a146f623.ace9a8","type":"debug","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":200,"wires":[]},{"id":"800cf61a.0d7b18","type":"comment","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"ProfiNET","info":"","x":630,"y":160,"wires":[]},{"id":"a504978.d384268","type":"mqtt out","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"","topic":"ie/d/j/simatic/v1/mbtcp1/dp/w/ModbusTCP","qos":"","retain":"","broker":"310e5351.87c53c","x":600,"y":480,"wires":[]},{"id":"9921d00e.83ca4","type":"comment","z":"4ca5e3ec.ec051c","g":"1c0c6fb8.28a82","name":"Metadata","info":"","x":470,"y":100,"wires":[]},{"id":"81b25c84.50b6c","type":"comment","z":"4ca5e3ec.ec051c","g":"fc69a470.75e038","name":"Reading","info":"","x":540,"y":240,"wires":[]},{"id":"2457c9e8.ec4c46","type":"comment","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"writing","info":"","x":420,"y":380,"wires":[]},{"id":"a129fe3.0aa24","type":"inject","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"inject 86","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":0,\"vals\":[{\"id\":\"102\",\"val\":86}]}","payloadType":"json","x":200,"y":480,"wires":[["a504978.d384268","1870f328.9035dd"]]},{"id":"182f0d6d.eed2a3","type":"comment","z":"4ca5e3ec.ec051c","g":"bf7cd62f.e5ede8","name":"ie/d/j/simatic/v1/mbtcp1/dp/w/ModbusTCP/default","info":"","x":620,"y":540,"wires":[]},{"id":"210e9042.b325e","type":"comment","z":"4ca5e3ec.ec051c","g":"fc69a470.75e038","name":"\"ModbusTCP\" je ime konekcije","info":"","x":290,"y":240,"wires":[]},{"id":"ddf635f4.96db28","type":"mqtt in","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","topic":"ie/d/j/simatic/v1/pnhs1/#","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":320,"y":340,"wires":[["ee5070fb.9ac28"]]},{"id":"ee5070fb.9ac28","type":"debug","z":"b1712564.eaefa8","g":"e593ae0a.32951","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":340,"wires":[]},{"id":"dc78e63a.690ae8","type":"inject","z":"b1712564.eaefa8","g":"a2fd4f2e.5debd","name":"inject 55","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":0,\"vals\":[{\"id\":\"201\",\"val\":55}]}","payloadType":"json","x":240,"y":520,"wires":[["a1eba7bf.3a7808","4bbe2f3.4c7f3d"]]},{"id":"a1eba7bf.3a7808","type":"debug","z":"b1712564.eaefa8","g":"a2fd4f2e.5debd","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":690,"y":520,"wires":[]},{"id":"4bbe2f3.4c7f3d","type":"mqtt out","z":"b1712564.eaefa8","g":"a2fd4f2e.5debd","name":"","topic":"ie/d/j/simatic/v1/pnhs1/dp/w","qos":"","retain":"","broker":"310e5351.87c53c","x":600,"y":580,"wires":[]},{"id":"e98bbe99.cdc73","type":"comment","z":"b1712564.eaefa8","g":"a2fd4f2e.5debd","name":"writing - ne radi","info":"","x":490,"y":480,"wires":[]},{"id":"27d69b96.a58c14","type":"inject","z":"b1712564.eaefa8","g":"a2fd4f2e.5debd","name":"inject 86","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":3,\"vals\":[{\"id\":\"201\",\"qc\":3,\"qx\":4288,\"ts\":\"2021-12-14T07:55:22.7137050Z\",\"val\":86}]}","payloadType":"json","x":240,"y":580,"wires":[["4bbe2f3.4c7f3d","a1eba7bf.3a7808"]]},{"id":"3fe9dbdb.0dbcd4","type":"debug","z":"697662fa.f6378c","g":"d6fe9150.27bee","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":120,"wires":[]},{"id":"95548cf8.f2114","type":"comment","z":"697662fa.f6378c","g":"d6fe9150.27bee","name":"Get all tag names and IDs and put in global maps","info":"","x":520,"y":60,"wires":[]},{"id":"b2306431.689c68","type":"mqtt in","z":"697662fa.f6378c","g":"d6fe9150.27bee","name":"","topic":"ie/m/#","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":210,"y":120,"wires":[["62eab68b.b9b0f8"]]},{"id":"62eab68b.b9b0f8","type":"function","z":"697662fa.f6378c","g":"d6fe9150.27bee","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\") || new Map();          //global only changed here\n//let connectionName = \"Tank\"; // Name of the connection\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    if ((connection.name != null)) {\n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.name, dataPointDefinition.id);\n\t\n            });\n        });\n    }\n});\n\n\n/*################################# \n    update flow maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\n\n// for (let names of nameIDMap.keys()) { //nameIDMap.values()\n//   node.warn(names);\n// }\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":540,"y":120,"wires":[["3fe9dbdb.0dbcd4"]]},{"id":"7b6db4f9.69247c","type":"inject","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"$now()","payloadType":"jsonata","x":250,"y":960,"wires":[["a21804fd.c39648"]]},{"id":"e3744832.f1e3d8","type":"mqtt out","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","topic":"ie/d/j/simatic/v1/opcua1/dp/r/OPCUA/default","qos":"","retain":"","broker":"310e5351.87c53c","x":750,"y":960,"wires":[]},{"id":"a21804fd.c39648","type":"function","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","func":"\nlet tagID = \"502\";\nlet tagValue = 9;\n\n\nmsg.payload = \n{\n    \"seq\": 1,\n    \"vals\": [\n        {\n        \"id\": tagID,       //get the id to the variable name\n        \"qc\": 3,\n        \"ts\": msg.payload,\n        \"val\": tagValue\n        }\n    ]\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":960,"wires":[["b5b6c741.a0d3b8","e3744832.f1e3d8"]]},{"id":"b5b6c741.a0d3b8","type":"debug","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":650,"y":1020,"wires":[]},{"id":"73bb85e7.c8100c","type":"inject","z":"c84ed8d2.a7d768","name":"","props":[{"p":"payload"},{"p":"topic","v":"","vt":"env"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"$now()","payloadType":"jsonata","x":180,"y":300,"wires":[["8b10ac24.57484","4c5e541c.092f9c"]]},{"id":"2775c81a.da35e8","type":"complete","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"","scope":["2d07e65f.a11eea"],"uncaught":false,"x":210,"y":600,"wires":[["4fc4fc20.9ec004"]]},{"id":"4fc4fc20.9ec004","type":"function","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"calculate KPI","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      //global defined in \"Name - ID zuordenen\"\nlet idValueMap = global.get(\"IDValueMap\");    //global defined in \"Name - ID zuordenen\", changed here with every message\nlet oldValues = global.get(\"oldValues\") || new Map();      //global defined in \"Name - ID zuordenen\", changed here when parameters changed\nlet timestampMap = global.get(\"IDTimestampMap\");\n\n//Variables for writing changes of the parameters to the form\nlet producedBottlesID = nameIDMap.get(\"ProducedBottles\"); \nlet faultyBottlesID = nameIDMap.get(\"FaultyBottles\"); \nlet productionQualityID = nameIDMap.get(\"ProductionQuality\");\n// node.warn(producedBottlesID);\n\nlet producedBottlesValue = idValueMap.get(producedBottlesID); \nlet faultyBottlesValue = idValueMap.get(faultyBottlesID);\nlet timestamp = timestampMap.get(producedBottlesID);\n// node.warn(producedBottlesValue);\n\n if(producedBottlesValue != oldValues.get(producedBottlesID)){\n    msg.payload  = timestamp;\n    msg.topic = \"ie/d/j/simatic/v1/opcua1/dp/r/OPCUA/default\";\n    oldValues.set(producedBottlesID,producedBottlesValue);\n    \n    if(faultyBottlesValue == 0){ \n        idValueMap.set(productionQualityID, 100);\n    }\n    else{\n        let qualityTmp = 100-(faultyBottlesValue/producedBottlesValue)*100;\n        // node.warn(qualityTmp);\n        idValueMap.set(productionQualityID, qualityTmp);\n    }\n    global.set(\"IDValueMap\", idValueMap);\n    global.set(\"oldValues\", oldValues);\n}\nelse msg = null;\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":370,"y":600,"wires":[["88618ed4.bea63","797ca005.442b2"]]},{"id":"88618ed4.bea63","type":"debug","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":660,"wires":[]},{"id":"cda381df.c595a","type":"function","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"get all nameIDMap","func":"let nameIDMap = global.get(\"IDValueMap\");   \n\n// let nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\") || new Map();  \n// let timestampMapObject = global.get(\"IDTimestampMap\") || new Map();\n\n\nfor (let names of nameIDMap.keys()) { //nameIDMap.values() //nameIDMap.keys()\n  node.warn(names);\n}\n\n// node.warn(idValueMap.get(nameIDMap.get(\"ProductionQuality\")));\n// return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":670,"y":900,"wires":[[]]},{"id":"546d9b79.5e2594","type":"inject","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":260,"y":900,"wires":[["cda381df.c595a"]]},{"id":"f43f348e.8c6598","type":"mqtt out","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"","topic":"ie/d/j/simatic/v1/opcua1/dp/r/OPCUA/default","qos":"","retain":"false","broker":"310e5351.87c53c","x":830,"y":600,"wires":[]},{"id":"797ca005.442b2","type":"function","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"format KPI","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      //global defined in \"Name - ID zuordenen\"\nlet idValueMap = global.get(\"IDValueMap\");    //global defined in \"Name - ID zuordenen\", changed here with every message\n\nlet sequence = context.get(\"sequence\") || 0;\nsequence = sequence + 1;\n\nlet tagID = nameIDMap.get(\"ProductionQuality\");\nlet tagValue = idValueMap.get(tagID);\n\nmsg.payload = \n{\n    \"seq\": sequence,\n    \"vals\": [\n        {\n        \"id\": tagID,\n        \"qc\": 3,\n        \"ts\": msg.payload,\n        \"val\": tagValue\n        }\n    ]\n}\n\ncontext.set(\"sequence\", sequence);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":600,"wires":[["f43f348e.8c6598","5de76388.e0ec6c"]]},{"id":"5de76388.e0ec6c","type":"debug","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":750,"y":660,"wires":[]},{"id":"52f31d0c.92b8c4","type":"comment","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"test","info":"","x":490,"y":800,"wires":[]},{"id":"e41e1224.5fc15","type":"mqtt in","z":"9f0841b0.729a7","name":"","topic":"ie/d/j/cc/dp/r/energy1/default","qos":"2","datatype":"json","broker":"cb24c6f3.e214a8","x":260,"y":180,"wires":[["aeef7509.f19de8","a5eff3a4.ffa48"]]},{"id":"45b09c5a.0722b4","type":"mqtt in","z":"9f0841b0.729a7","name":"","topic":"ie/m/j/cc/energy1/dp","qos":"2","datatype":"json","broker":"cb24c6f3.e214a8","x":230,"y":260,"wires":[["924b9b8f.a45e58","1baec86c.4d3108"]]},{"id":"924b9b8f.a45e58","type":"debug","z":"9f0841b0.729a7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"aeef7509.f19de8","type":"debug","z":"9f0841b0.729a7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":570,"y":120,"wires":[]},{"id":"1baec86c.4d3108","type":"function","z":"9f0841b0.729a7","name":"","func":"msg.topic = 'ie/m/j/cc/converted/dp'\nmsg.payload = msg.payload.payload\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":260,"wires":[["bdbda4cb.8718a8"]]},{"id":"a5eff3a4.ffa48","type":"function","z":"9f0841b0.729a7","name":"","func":"msg.topic = 'ie/d/j/cc/converted/dp/r/EnergyMeter/default'\nmsg.payload = msg.payload.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":180,"wires":[["cf7fcee2.add47"]]},{"id":"cf7fcee2.add47","type":"mqtt out","z":"9f0841b0.729a7","name":"","topic":"ie/d/j/cc/converted/dp/r/energy1/default","qos":"","retain":"","broker":"cb24c6f3.e214a8","x":1070,"y":180,"wires":[]},{"id":"36abdeb9.410122","type":"mqtt out","z":"9f0841b0.729a7","name":"","topic":"ie/m/j/cc/converted/energy1/dp","qos":"","retain":"true","broker":"cb24c6f3.e214a8","x":1050,"y":260,"wires":[]},{"id":"bdbda4cb.8718a8","type":"function","z":"9f0841b0.729a7","name":"","func":"msg.payload.connections.forEach(element => {\n    element.dataPoints.forEach(elm => {\n        elm.topic = 'ie/d/j/cc/converted/dp/r/energy1/default'\n    })\n})\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":770,"y":260,"wires":[["36abdeb9.410122"]]},{"id":"50368145.e2ef5","type":"mqtt in","z":"9f0841b0.729a7","name":"","topic":"ie/m/j/cc/converted/energy1/dp","qos":"2","datatype":"json","broker":"cb24c6f3.e214a8","x":270,"y":600,"wires":[["cde8aaf0.e50598"]]},{"id":"cde8aaf0.e50598","type":"debug","z":"9f0841b0.729a7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":610,"y":600,"wires":[]},{"id":"7d70781.2956f88","type":"mqtt in","z":"9f0841b0.729a7","name":"","topic":"ie/d/j/cc/converted/dp/r/energy1/default","qos":"2","datatype":"json","broker":"cb24c6f3.e214a8","x":290,"y":680,"wires":[["844a08c5.f589d8"]]},{"id":"844a08c5.f589d8","type":"debug","z":"9f0841b0.729a7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":640,"y":680,"wires":[]},{"id":"8396d4f7.056f78","type":"comment","z":"9f0841b0.729a7","name":"Testing","info":"","x":120,"y":500,"wires":[]},{"id":"88727709.7991b8","type":"mqtt in","z":"697662fa.f6378c","g":"315930f9.f44c9","name":"","topic":"ie/d/j/simatic/v1/#","qos":"2","datatype":"json","broker":"310e5351.87c53c","x":240,"y":260,"wires":[["2d07e65f.a11eea"]]},{"id":"8a12832e.7b065","type":"comment","z":"697662fa.f6378c","g":"315930f9.f44c9","name":"Get tags values and insert in global idValueMap and IDTimestampMap","info":"","x":530,"y":220,"wires":[]},{"id":"2d07e65f.a11eea","type":"function","z":"697662fa.f6378c","g":"315930f9.f44c9","name":"assign ID - Value ","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = global.get(\"NameIDMap\");      \nlet idValueMap = global.get(\"IDValueMap\") || new Map();  \nlet timestampMap = global.get(\"IDTimestampMap\") || new Map();\n\n\n/*################################# \n    Parse payload and store id and value to the idValueMap\n#################################*/  \nlet m= msg.payload;\n\nif(m.vals != undefined)\n{\n    //write the recieved Values into the Map (key = id)\n    m.vals.forEach(value => {\n        idValueMap.set(value.id, value.val);\n        timestampMap.set(value.id,value.ts);\n    });\n}\n\n/*################################# \n    update flow maps\n#################################*/  \nglobal.set(\"IDValueMap\", idValueMap);\nglobal.set(\"IDTimestampMap\", timestampMap);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":260,"wires":[["4c987d7.a281784"]]},{"id":"4c987d7.a281784","type":"debug","z":"697662fa.f6378c","g":"315930f9.f44c9","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":870,"y":260,"wires":[]},{"id":"8a1a2571.71dd98","type":"inject","z":"697662fa.f6378c","g":"4835363e.32b548","name":"reset","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"\"\"","payloadType":"str","x":230,"y":400,"wires":[["756577bc.2a2b78","fd523445.63f038"]]},{"id":"55f8dfec.1c44b","type":"inject","z":"697662fa.f6378c","g":"4835363e.32b548","name":"set","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"seq\":3,\"connections\":[{\"name\":\"OPCUA\",\"type\":\"OPCUA\",\"dataPoints\":[{\"name\":\"default\",\"topic\":\"ie/d/j/simatic/v1/opcua1/dp/r/OPCUA/default\",\"pubTopic\":\"ie/d/j/simatic/v1/opcua1/dp/w\",\"publishType\":\"bulk\",\"dataPointDefinitions\":[{\"name\":\"ProductionQuality\",\"id\":\"501\",\"dataType\":\"Real\"},{\"name\":\"test\",\"id\":\"502\",\"dataType\":\"Int\"}]}]}]}","payloadType":"json","x":230,"y":460,"wires":[["fd523445.63f038","756577bc.2a2b78"]]},{"id":"fd523445.63f038","type":"debug","z":"697662fa.f6378c","g":"4835363e.32b548","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":460,"wires":[]},{"id":"756577bc.2a2b78","type":"mqtt out","z":"697662fa.f6378c","g":"4835363e.32b548","name":"","topic":"ie/m/j/simatic/v1/opcua1/dp","qos":"2","retain":"true","broker":"310e5351.87c53c","x":840,"y":400,"wires":[]},{"id":"a9bf7e43.6733f","type":"comment","z":"697662fa.f6378c","g":"4835363e.32b548","name":"Set metadata","info":"","x":550,"y":360,"wires":[]},{"id":"4085c35c.51955c","type":"comment","z":"697662fa.f6378c","g":"6751a745.1161a8","name":"get values, calculate KPI and publish","info":"","x":540,"y":560,"wires":[]},{"id":"496a05a0.32a08c","type":"mqtt in","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","topic":"ie/d/j/simatic/v1/opcua1/dp/r","qos":"2","datatype":"auto","broker":"310e5351.87c53c","x":300,"y":840,"wires":[["ea095553.9c90e8"]]},{"id":"ea095553.9c90e8","type":"debug","z":"697662fa.f6378c","g":"e60e8c14.57c3d","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":650,"y":840,"wires":[]},{"id":"6a29b939.629d88","type":"inject","z":"c84ed8d2.a7d768","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"$now()","payloadType":"jsonata","x":210,"y":520,"wires":[["2babf6c4.eb215a"]]},{"id":"2babf6c4.eb215a","type":"function","z":"c84ed8d2.a7d768","name":"","func":"\nlet tagID = \"102\";\nlet tagValue = 109;\n\n\nmsg.payload = \n{\n    \"seq\": 1,\n    \"vals\": [\n        {\n        \"id\": tagID,       //get the id to the variable name\n        \"qc\": 3,\n        \"ts\": msg.payload,\n        \"val\": tagValue\n        }\n    ]\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":520,"wires":[["1dabf3cb.20148c","d31e9925.66cd88"]]},{"id":"d31e9925.66cd88","type":"mqtt out","z":"c84ed8d2.a7d768","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/Tank/default","qos":"","retain":"","broker":"310e5351.87c53c","x":690,"y":520,"wires":[]},{"id":"1dabf3cb.20148c","type":"debug","z":"c84ed8d2.a7d768","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":580,"wires":[]}]